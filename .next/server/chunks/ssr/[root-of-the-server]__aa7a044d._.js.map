{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Desenvolvimento/React/stor-dashboard/components/providers/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/theme-provider.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,yEACA","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Desenvolvimento/React/stor-dashboard/components/providers/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/theme-provider.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qDACA","debugId":null}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Desenvolvimento/React/stor-dashboard/components/active-theme.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ActiveThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ActiveThemeProvider() from the server but ActiveThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/active-theme.tsx <module evaluation>\",\n    \"ActiveThemeProvider\",\n);\nexport const useThemeConfig = registerClientReference(\n    function() { throw new Error(\"Attempted to call useThemeConfig() from the server but useThemeConfig is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/active-theme.tsx <module evaluation>\",\n    \"useThemeConfig\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6DACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,6DACA","debugId":null}},
    {"offset": {"line": 125, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Desenvolvimento/React/stor-dashboard/components/active-theme.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ActiveThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ActiveThemeProvider() from the server but ActiveThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/active-theme.tsx\",\n    \"ActiveThemeProvider\",\n);\nexport const useThemeConfig = registerClientReference(\n    function() { throw new Error(\"Attempted to call useThemeConfig() from the server but useThemeConfig is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/active-theme.tsx\",\n    \"useThemeConfig\",\n);\n"],"names":[],"mappings":";;;;AAAA;;AACO,MAAM,sBAAsB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,yCACA;AAEG,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,yCACA","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Desenvolvimento/React/stor-dashboard/components/providers/sidebar-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/sidebar-provider.tsx <module evaluation>\",\n    \"SidebarProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2EACA","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Desenvolvimento/React/stor-dashboard/components/providers/sidebar-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/providers/sidebar-provider.tsx\",\n    \"SidebarProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,kBAAkB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uDACA","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Desenvolvimento/React/stor-dashboard/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Desenvolvimento/React/stor-dashboard/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\r\nimport { Geist, Geist_Mono } from \"next/font/google\";\r\nimport \"./globals.css\";\r\nimport { ThemeProvider } from \"@/components/providers/theme-provider\";\r\nimport { ActiveThemeProvider } from \"@/components/active-theme\";\r\nimport { SidebarProvider } from \"@/components/providers/sidebar-provider\";\r\nimport { cookies } from \"next/headers\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst META_THEME_COLORS = {\r\n  light: \"#e8ebea\",\r\n  dark: \"#09090b\",\r\n};\r\n\r\nconst geistSans = Geist({\r\n  variable: \"--font-geist-sans\",\r\n  subsets: [\"latin\"],\r\n});\r\n\r\nconst geistMono = Geist_Mono({\r\n  variable: \"--font-geist-mono\",\r\n  subsets: [\"latin\"],\r\n});\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Stor Contador\",\r\n  description: \"Stor Contador\",\r\n};\r\n\r\nexport default async function RootLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  const cookieStore = await cookies();\r\n  const activeThemeValue = cookieStore.get(\"active_theme\")?.value;\r\n  const isScaled = activeThemeValue?.endsWith(\"-scaled\");\r\n\r\n  return (\r\n    <html lang=\"pt-BR\" suppressHydrationWarning>\r\n      <body\r\n        className={cn(\r\n          \"bg-background overscroll-none font-sans antialiased\",\r\n          activeThemeValue ? `theme-${activeThemeValue}` : \"\",\r\n          isScaled ? \"theme-scaled\" : \"\"\r\n        )}\r\n      >\r\n        <ThemeProvider\r\n          attribute=\"class\"\r\n          defaultTheme=\"system\"\r\n          enableSystem\r\n          disableTransitionOnChange\r\n          enableColorScheme\r\n        >\r\n          <ActiveThemeProvider initialTheme={activeThemeValue}>\r\n            <SidebarProvider>\r\n              {children}\r\n            </SidebarProvider>\r\n          </ActiveThemeProvider>\r\n        </ThemeProvider>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;AAEA,MAAM,oBAAoB;IACxB,OAAO;IACP,MAAM;AACR;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,eAAe,WAAW,EACvC,QAAQ,EAGR;IACA,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,MAAM,mBAAmB,YAAY,GAAG,CAAC,iBAAiB;IAC1D,MAAM,WAAW,kBAAkB,SAAS;IAE5C,qBACE,8OAAC;QAAK,MAAK;QAAQ,wBAAwB;kBACzC,cAAA,8OAAC;YACC,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,uDACA,mBAAmB,CAAC,MAAM,EAAE,kBAAkB,GAAG,IACjD,WAAW,iBAAiB;sBAG9B,cAAA,8OAAC,6IAAA,CAAA,gBAAa;gBACZ,WAAU;gBACV,cAAa;gBACb,YAAY;gBACZ,yBAAyB;gBACzB,iBAAiB;0BAEjB,cAAA,8OAAC,8HAAA,CAAA,sBAAmB;oBAAC,cAAc;8BACjC,cAAA,8OAAC,+IAAA,CAAA,kBAAe;kCACb;;;;;;;;;;;;;;;;;;;;;;;;;;AAOf","debugId":null}}]
}